%!PS-Adobe-3.0
%%Creator: groff version 1.22.4
%%CreationDate: Sun Jun 14 01:06:27 2020
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Courier
%%+ font Courier-Oblique
%%+ font Courier-Bold
%%DocumentSuppliedResources: procset grops 1.22 4
%%Pages: 8
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 4
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier-Bold@0 ENC0/Courier-Bold RE/Courier-Oblique@0 ENC0
/Courier-Oblique RE/Courier@0 ENC0/Courier RE/Times-Italic@0 ENC0
/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0
/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.9(SOCKET\(7\) Linux)72 48 R(Programmer')2.5
E 2.5(sM)-.55 G 122.9(anual SOCKET\(7\))-2.5 F/F1 10.95/Times-Bold@0 SF
-.219(NA)72 84 S(ME).219 E F0(sock)108 96 Q(et \255 Linux sock)-.1 E
(et interf)-.1 E(ace)-.1 E F1(SYNOPSIS)72 112.8 Q/F2 10/Times-Bold@0 SF
(#include <sys/sock)108 124.8 Q(et.h>)-.1 E/F3 10/Times-Italic@0 SF(soc)
108.34 141.6 Q(kfd)-.2 E F2 2.5(=s)3.27 G(ock)-2.5 E(et\(int)-.1 E F3
(soc)2.84 E -.1(ke)-.2 G(t_family).1 E F2 2.5(,i).32 G(nt)-2.5 E F3(soc)
2.84 E -.1(ke)-.2 G(t_type).1 E F2 2.5(,i).18 G(nt)-2.5 E F3(pr)3.75 E
(otocol)-.45 E F2(\);).51 E F1(DESCRIPTION)72 158.4 Q F0 .098
(This manual page describes the Linux netw)108 170.4 R .098(orking sock)
-.1 F .098(et layer user interf)-.1 F 2.598(ace. The)-.1 F .097
(BSD compatible sock)2.598 F(ets)-.1 E .387(are the uniform interf)108
182.4 R .387(ace between the user process and the netw)-.1 F .387
(ork protocol stacks in the k)-.1 F 2.887(ernel. The)-.1 F(pro-)2.888 E
1.413(tocol modules are grouped into)108 194.4 R F3(pr)5.162 E 1.412
(otocol families)-.45 F F0 1.412(such as)4.182 F F2(AF_INET)3.912 E F0
(,)A F2(AF_IPX)3.912 E F0 3.912(,a)C(nd)-3.912 E F2(AF_P)3.912 E -.55
(AC)-.74 G(KET).55 E F0 3.912(,a)C(nd)-3.912 E F3(soc)108.34 206.4 Q -.1
(ke)-.2 G 2.628(tt).1 G(ypes)-2.628 E F0 .128(such as)2.898 F F2
(SOCK_STREAM)2.628 E F0(or)2.628 E F2(SOCK_DGRAM)2.628 E F0 5.128(.S)C
(ee)-5.128 E F2(sock)2.629 E(et)-.1 E F0 .129
(\(2\) for more information on f)B(ami-)-.1 E(lies and types.)108 218.4
Q F2(Sock)87 235.2 Q(et-lay)-.1 E(er functions)-.1 E F0 .629
(These functions are used by the user process to send or recei)108 247.2
R .928 -.15(ve p)-.25 H(ack).15 E .628(ets and to do other sock)-.1 F
.628(et operations.)-.1 F -.15(Fo)108 259.2 S 2.5(rm).15 G
(ore information see their respecti)-2.5 E .3 -.15(ve m)-.25 H
(anual pages.).15 E F2(sock)108 276 Q(et)-.1 E F0 .814
(\(2\) creates a sock)B(et,)-.1 E F2(connect)3.314 E F0 .815
(\(2\) connects a sock)B .815(et to a remote sock)-.1 F .815
(et address, the)-.1 F F2(bind)3.315 E F0 .815(\(2\) function)B .858
(binds a sock)108 288 R .857(et to a local sock)-.1 F .857(et address,)
-.1 F F2(listen)3.357 E F0 .857(\(2\) tells the sock)B .857(et that ne)
-.1 F 3.357(wc)-.25 G .857(onnections shall be accepted,)-3.357 F(and)
108 300 Q F2(accept)2.685 E F0 .186(\(2\) is used to get a ne)B 2.686
(ws)-.25 G(ock)-2.686 E .186(et with a ne)-.1 F 2.686(wi)-.25 G .186
(ncoming connection.)-2.686 F F2(sock)5.186 E(etpair)-.1 E F0 .186
(\(2\) returns tw)B 2.686(oc)-.1 G(on-)-2.686 E(nected anon)108 312 Q
(ymous sock)-.15 E(ets \(implemented only for a fe)-.1 E 2.5(wl)-.25 G
(ocal f)-2.5 E(amilies lik)-.1 E(e)-.1 E F2(AF_UNIX)2.5 E F0(\))A F2
(send)108 328.8 Q F0(\(2\),)A F2(sendto)2.568 E F0 .068(\(2\), and)B F2
(sendmsg)2.568 E F0 .068(\(2\) send data o)B -.15(ve)-.15 G 2.568(ras)
.15 G(ock)-2.568 E .068(et, and)-.1 F F2 -.18(re)2.567 G(cv).18 E F0
(\(2\),)A F2 -.18(re)2.567 G(cvfr).18 E(om)-.18 E F0(\(2\),)A F2 -.18
(re)2.567 G(cvmsg).18 E F0 .067(\(2\) recei)B -.15(ve)-.25 G .309
(data from a sock)108 340.8 R(et.)-.1 E F2(poll)5.309 E F0 .309
(\(2\) and)B F2(select)2.809 E F0 .309(\(2\) w)B .309(ait for arri)-.1 F
.31(ving data or a readiness to send data.)-.25 F .31(In addition, the)
5.31 F .126(standard I/O operations lik)108 352.8 R(e)-.1 E F2(write)
2.626 E F0(\(2\),)A F2(write)2.626 E(v)-.15 E F0(\(2\),)A F2(send\214le)
2.626 E F0(\(2\),)A F2 -.18(re)2.626 G(ad).18 E F0 .126(\(2\), and)B F2
-.18(re)2.626 G(adv).18 E F0 .126(\(2\) can be used to read and)B
(write data.)108 364.8 Q F2(getsockname)108 381.6 Q F0 1.154
(\(2\) returns the local sock)B 1.154(et address and)-.1 F F2(getpeer)
3.654 E(name)-.15 E F0 1.154(\(2\) returns the remote sock)B 1.155
(et address.)-.1 F F2(getsock)108 393.6 Q(opt)-.15 E F0 1.232(\(2\) and)
B F2(setsock)3.732 E(opt)-.15 E F0 1.232
(\(2\) are used to set or get sock)B 1.232
(et layer or protocol options.)-.1 F F2(ioctl)6.232 E F0 1.231
(\(2\) can be)B(used to set or read some other options.)108 405.6 Q F2
(close)108 422.4 Q F0(\(2\) is used to close a sock)A(et.)-.1 E F2
(shutdo)5 E(wn)-.1 E F0(\(2\) closes parts of a full-duple)A 2.5(xs)-.15
G(ock)-2.5 E(et connection.)-.1 E(Seeking, or calling)108 439.2 Q F2(pr)
2.5 E(ead)-.18 E F0(\(2\) or)A F2(pwrite)2.5 E F0
(\(2\) with a nonzero position is not supported on sock)A(ets.)-.1 E
.061(It is possible to do nonblocking I/O on sock)108 456 R .061
(ets by setting the)-.1 F F2(O_NONBLOCK)2.561 E F0 .061
(\215ag on a sock)2.561 F .062(et \214le descrip-)-.1 F 1.463(tor using)
108 468 R F2(fcntl)3.963 E F0 3.962(\(2\). Then)B 1.462
(all operations that w)3.962 F 1.462
(ould block will \(usually\) return with)-.1 F F2(EA)3.962 E(GAIN)-.55 E
F0(\(operation)3.962 E .533(should be retried later\);)108 480 R F2
(connect)3.033 E F0 .533(\(2\) will return)B F2(EINPR)3.033 E(OGRESS)-.3
E F0(error)3.033 E 5.533(.T)-.55 G .534(he user can then w)-5.533 F .534
(ait for v)-.1 F(arious)-.25 E -2.15 -.25(ev e)108 492 T(nts via).25 E
F2(poll)2.5 E F0(\(2\) or)A F2(select)2.5 E F0(\(2\).)A 1.306
(tab\(:\) allbox; c s s l l l.)108 508.8 R 1.306(I/O e)6.306 F -.15(ve)
-.25 G 1.306(nts Ev).15 F 1.305
(ent:Poll \215ag:Occurrence Read:POLLIN:T{ Ne)-.15 F 3.805(wd)-.25 G
1.305(ata arri)-3.805 F -.15(ve)-.25 G 3.805(d. T}).15 F 4.98(Read:POLL\
IN:T{ A connection setup has been completed \(for connection-oriented s\
ock)108 520.8 R 4.98(ets\) T})-.1 F .683(Read:POLLHUP:T{ A disconnectio\
n request has been initiated by the other end.)108 532.8 R .683
(T} Read:POLLHUP:T{)5.683 F 3.216(Ac)108 544.8 S .716(onnection is brok)
-3.216 F .716(en \(only for connection-oriented protocols\).)-.1 F .717
(When the sock)5.716 F .717(et is written)-.1 F F2(SIGPIPE)3.217 E F0
(is)3.217 E 2.903(also sent.)108 556.8 R 2.903(T} Write:POLLOUT)7.903 F
2.903(:T{ Sock)-.5 F 2.903(et has enough send b)-.1 F(uf)-.2 E 2.903
(fer space for writing ne)-.25 F 5.402(wd)-.25 G 5.402(ata. T})-5.402 F
(Read/Write:T{ POLLIN |)108 568.8 Q .154(POLLOUT T}:T{ An outgoing)108
580.8 R F2(connect)2.654 E F0 .154(\(2\) \214nished.)B .154
(T} Read/Write:POLLERR:An asynchronous error oc-)5.154 F 3.604
(curred. Read/Write:POLLHUP:The)108 592.8 R 1.104(other end has shut do)
3.604 F 1.104(wn one direction.)-.25 F 1.104(Exception:POLLPRI:T{ Ur)
6.104 F(-)-.2 E(gent data arri)108 604.8 Q -.15(ve)-.25 G(d.).15 E F2
(SIGURG)5 E F0(is sent then.)2.5 E(T})5 E .534(An alternati)108 621.6 R
.834 -.15(ve t)-.25 H(o).15 E F2(poll)3.034 E F0 .534(\(2\) and)B F2
(select)3.034 E F0 .534(\(2\) is to let the k)B .535
(ernel inform the application about e)-.1 F -.15(ve)-.25 G .535
(nts via a).15 F F2(SIGIO)3.035 E F0 3.234(signal. F)108 633.6 R .734
(or that the)-.15 F F2(O_ASYNC)3.233 E F0 .733
(\215ag must be set on a sock)3.233 F .733(et \214le descriptor via)-.1
F F2(fcntl)3.233 E F0 .733(\(2\) and a v)B .733(alid signal)-.25 F
(handler for)108 645.6 Q F2(SIGIO)2.5 E F0(must be installed via)2.5 E
F2(sigaction)2.5 E F0 2.5(\(2\). See)B(the)2.5 E F3(Signals)2.83 E F0
(discussion belo)2.77 E -.65(w.)-.25 G F2(Sock)87 662.4 Q(et addr)-.1 E
(ess structur)-.18 E(es)-.18 E F0 1.688(Each sock)108 674.4 R 1.688
(et domain has its o)-.1 F 1.689(wn format for sock)-.25 F 1.689
(et addresses, with a domain-speci\214c address structure.)-.1 F .414
(Each of these structures be)108 686.4 R .413(gins with an inte)-.15 F
.413(ger "f)-.15 F .413(amily" \214eld \(typed as)-.1 F F3(sa_family_t)
3.253 E F0 2.913(\)t).68 G .413(hat indicates the type)-2.913 F 1.215
(of the address structure.)108 698.4 R 1.216(This allo)6.215 F 1.216
(ws the v)-.25 F 1.216(arious system calls \(e.g.,)-.25 F F2(connect)
3.716 E F0(\(2\),)A F2(bind)3.716 E F0(\(2\),)A F2(accept)3.716 E F0
(\(2\),)A F2(get-)3.716 E(sockname)108 710.4 Q F0(\(2\),)A F2(getpeer)
2.596 E(name)-.15 E F0 .096(\(2\)\), which are generic to all sock)B
.096(et domains, to determine the domain of a par)-.1 F(-)-.2 E
(ticular sock)108 722.4 Q(et address.)-.1 E 184.28(Linux 2018-02-02)72
768 R(1)205.67 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.9(SOCKET\(7\) Linux)72 48 R(Programmer')2.5
E 2.5(sM)-.55 G 122.9(anual SOCKET\(7\))-2.5 F 1.618 -.8(To a)108 84 T
(llo).8 E 2.518(wa)-.25 G .318 -.15(ny t)-2.518 H .018(ype of sock).15 F
.018(et address to be passed to interf)-.1 F .019(aces in the sock)-.1 F
.019(ets API, the type)-.1 F/F1 10/Times-Italic@0 SF .019(struct soc)
2.859 F(kaddr)-.2 E F0(is)2.519 E 3.475(de\214ned. The)108 96 R .975
(purpose of this type is purely to allo)3.475 F 3.475(wc)-.25 G .975
(asting of domain-speci\214c sock)-3.475 F .974(et address types to a)
-.1 F("generic" type, so as to a)108 108 Q -.2(vo)-.2 G(id compiler w).2
E(arnings about type mismatches in calls to the sock)-.1 E(ets API.)-.1
E .058(In addition, the sock)108 124.8 R .058(ets API pro)-.1 F .058
(vides the data type)-.15 F F1 .058(struct soc)2.898 F(kaddr_stor)-.2 E
-.1(age)-.15 G F0 5.058(.T).28 G .058(his type is suitable to accom-)
-5.058 F .67(modate all supported domain-speci\214c sock)108 136.8 R .67
(et address structures; it is lar)-.1 F .67
(ge enough and is aligned properly)-.18 F(.)-.65 E .43(\(In particular)
108 148.8 R 2.93(,i)-.4 G 2.93(ti)-2.93 G 2.93(sl)-2.93 G(ar)-2.93 E .43
(ge enough to hold IPv6 sock)-.18 F .43(et addresses.\))-.1 F .43
(The structure includes the follo)5.43 F .43(wing \214eld,)-.25 F
(which can be used to identify the type of sock)108 160.8 Q
(et address actually stored in the structure:)-.1 E/F2 10/Courier@0 SF
(sa_family_t ss_family;)152 177.6 Q F0(The)108 194.4 Q F1(soc)3.679 E
(kaddr_stor)-.2 E -.1(age)-.15 G F0 .839
(structure is useful in programs that must handle sock)3.619 F .838
(et addresses in a generic w)-.1 F(ay)-.1 E
(\(e.g., programs that must deal with both IPv4 and IPv6 sock)108 206.4
Q(et addresses\).)-.1 E/F3 10/Times-Bold@0 SF(Sock)87 223.2 Q
(et options)-.1 E F0 1.071(The sock)108 235.2 R 1.072
(et options listed belo)-.1 F 3.572(wc)-.25 G 1.072(an be set by using)
-3.572 F F3(setsock)3.572 E(opt)-.15 E F0 1.072(\(2\) and read with)B F3
(getsock)3.572 E(opt)-.15 E F0 1.072(\(2\) with the)B(sock)108 247.2 Q
(et le)-.1 E -.15(ve)-.25 G 2.5(ls).15 G(et to)-2.5 E F3(SOL_SOCKET)2.5
E F0(for all sock)2.5 E 2.5(ets. Unless)-.1 F(otherwise noted,)2.5 E F1
(optval)2.73 E F0(is a pointer to an)3.01 E F1(int)2.51 E F0(.).68 E F3
(SO_A)108 264 Q(CCEPTCONN)-.55 E F0 .49(Returns a v)144 276 R .49
(alue indicating whether or not this sock)-.25 F .49(et has been mark)
-.1 F .49(ed to accept connections with)-.1 F F3(listen)144 288 Q F0
2.556(\(2\). The)B -.25(va)2.556 G .056
(lue 0 indicates that this is not a listening sock).25 F .056(et, the v)
-.1 F .057(alue 1 indicates that this is a)-.25 F(listening sock)144 300
Q 2.5(et. This)-.1 F(sock)2.5 E(et option is read-only)-.1 E(.)-.65 E F3
(SO_A)108 316.8 Q(TT)-.95 E -.55(AC)-.9 G(H_FIL).55 E(TER)-.92 E F0
(\(since Linux 2.2\),)2.5 E F3(SO_A)2.5 E(TT)-.95 E -.55(AC)-.9 G(H_BPF)
.55 E F0(\(since Linux 3.19\))2.5 E 1.132(Attach a classic BPF \()144
328.8 R F3(SO_A)A(TT)-.95 E -.55(AC)-.9 G(H_FIL).55 E(TER)-.92 E F0
3.632(\)o)C 3.632(ra)-3.632 G 3.632(ne)-3.632 G 1.132(xtended BPF \()
-3.782 F F3(SO_A)A(TT)-.95 E -.55(AC)-.9 G(H_BPF).55 E F0 3.632(\)p)C
(ro-)-3.632 E .875(gram to the sock)144 340.8 R .876
(et for use as a \214lter of incoming pack)-.1 F 3.376(ets. A)-.1 F
(pack)3.376 E .876(et will be dropped if the \214lter)-.1 F .403
(program returns zero.)144 352.8 R .403
(If the \214lter program returns a nonzero v)5.403 F .402
(alue which is less than the pack)-.25 F(et')-.1 E(s)-.55 E .094
(data length, the pack)144 364.8 R .094
(et will be truncated to the length returned.)-.1 F .095(If the v)5.095
F .095(alue returned by the \214lter is)-.25 F
(greater than or equal to the pack)144 376.8 Q(et')-.1 E 2.5(sd)-.55 G
(ata length, the pack)-2.5 E(et is allo)-.1 E
(wed to proceed unmodi\214ed.)-.25 E(The ar)144 393.6 Q(gument for)-.18
E F3(SO_A)2.5 E(TT)-.95 E -.55(AC)-.9 G(H_FIL).55 E(TER)-.92 E F0(is a)
2.5 E F1(soc)2.84 E(k_fpr)-.2 E -.1(og)-.45 G F0
(structure, de\214ned in)2.82 E F1(<linux/\214lter)2.16 E(.h>)-1.11 E F0
(:)A F2(struct sock_fprog {)164 410.4 Q(unsigned short)188 422.4 Q(len;)
36 E(struct sock_filter *filter;)188 434.4 Q(};)164 446.4 Q F0 .815
(The ar)144 463.2 R .815(gument for)-.18 F F3(SO_A)3.315 E(TT)-.95 E
-.55(AC)-.9 G(H_BPF).55 E F0 .814
(is a \214le descriptor returned by the)3.315 F F3(bpf)3.314 E F0 .814
(\(2\) system call and)B(must refer to a program of type)144 475.2 Q F3
(BPF_PR)2.5 E(OG_TYPE_SOCKET_FIL)-.3 E(TER.)-.92 E F0 .338
(These options may be set multiple times for a gi)144 492 R -.15(ve)-.25
G 2.838(ns).15 G(ock)-2.838 E .338(et, each time replacing the pre)-.1 F
.339(vious \214lter)-.25 F 3.406(program. The)144 504 R .906
(classic and e)3.406 F .906(xtended v)-.15 F .906
(ersions may be called on the same sock)-.15 F .906(et, b)-.1 F .906
(ut the pre)-.2 F(vious)-.25 E(\214lter will al)144 516 Q -.1(wa)-.1 G
(ys be replaced such that a sock).1 E(et ne)-.1 E -.15(ve)-.25 G 2.5(rh)
.15 G(as more than one \214lter de\214ned.)-2.5 E 1.369
(Both classic and e)144 532.8 R 1.369(xtended BPF are e)-.15 F 1.369
(xplained in the k)-.15 F 1.369(ernel source \214le)-.1 F F1
(Documentation/network-)4.45 E(ing/\214lter)144 544.8 Q(.txt)-1.11 E F3
(SO_A)108 561.6 Q(TT)-.95 E -.55(AC)-.9 G(H_REUSEPOR).55 E(T_CBPF)-.4 E
F0(,)A F3(SO_A)2.5 E(TT)-.95 E -.55(AC)-.9 G(H_REUSEPOR).55 E(T_EBPF)-.4
E F0 -.15(Fo)144 573.6 S 4.212(ru).15 G 1.712(se with the)-4.212 F F3
(SO_REUSEPOR)4.212 E(T)-.4 E F0 1.712(option, these options allo)4.212 F
4.212(wt)-.25 G 1.712(he user to set a classic BPF)-4.212 F(\()144 585.6
Q F3(SO_A)A(TT)-.95 E -.55(AC)-.9 G(H_REUSEPOR).55 E(T_CBPF)-.4 E F0
11.712(\)o)C 11.712(ra)-11.712 G 11.712(ne)-11.712 G 9.212
(xtended BPF \()-11.862 F F3(SO_A)A(TT)-.95 E -.55(AC)-.9 G(H_REUSE-).55
E(POR)144 597.6 Q(T_EBPF)-.4 E F0 3.694(\)p)C 1.194
(rogram which de\214nes ho)-3.694 F 3.694(wp)-.25 G(ack)-3.694 E 1.194
(ets are assigned to the sock)-.1 F 1.193(ets in the reuseport)-.1 F
.311(group \(that is, all sock)144 609.6 R .311(ets which ha)-.1 F -.15
(ve)-.2 G F3(SO_REUSEPOR)2.961 E(T)-.4 E F0 .312
(set and are using the same local address)2.811 F(to recei)144 621.6 Q
.3 -.15(ve p)-.25 H(ack).15 E(ets\).)-.1 E .508
(The BPF program must return an inde)144 638.4 R 3.007(xb)-.15 G .507
(etween 0 and N\2551 representing the sock)-3.007 F .507
(et which should)-.1 F(recei)144 650.4 Q .455 -.15(ve t)-.25 H .155
(he pack).15 F .155(et \(where N is the number of sock)-.1 F .156
(ets in the group\).)-.1 F .156(If the BPF program returns an)5.156 F
(in)144 662.4 Q -.25(va)-.4 G(lid inde).25 E(x, sock)-.15 E
(et selection will f)-.1 E(all back to the plain)-.1 E F3(SO_REUSEPOR)
2.5 E(T)-.4 E F0(mechanism.)2.5 E(Sock)144 679.2 Q 1.602
(ets are numbered in the order in which the)-.1 F 4.102(ya)-.15 G 1.601
(re added to the group \(that is, the order of)-4.102 F F3(bind)144
691.2 Q F0 .205(\(2\) calls for UDP sock)B .205(ets or the order of)-.1
F F3(listen)2.705 E F0 .205(\(2\) calls for TCP sock)B 2.705(ets\). Ne)
-.1 F 2.705(ws)-.25 G(ock)-2.705 E .205(ets added)-.1 F 1.029
(to a reuseport group will inherit the BPF program.)144 703.2 R 1.029
(When a sock)6.029 F 1.029(et is remo)-.1 F -.15(ve)-.15 G 3.528(df).15
G 1.028(rom a reuseport)-3.528 F(group \(via)144 715.2 Q F3(close)2.5 E
F0(\(2\)\), the last sock)A(et in the group will be mo)-.1 E -.15(ve)
-.15 G 2.5(di).15 G(nto the closed sock)-2.5 E(et')-.1 E 2.5(sp)-.55 G
(osition.)-2.5 E 184.28(Linux 2018-02-02)72 768 R(2)205.67 E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.9(SOCKET\(7\) Linux)72 48 R(Programmer')2.5
E 2.5(sM)-.55 G 122.9(anual SOCKET\(7\))-2.5 F .483
(These options may be set repeatedly at an)144 84 R 2.983(yt)-.15 G .483
(ime on an)-2.983 F 2.983(ys)-.15 G(ock)-2.983 E .484
(et in the group to replace the current)-.1 F
(BPF program used by all sock)144 96 Q(ets in the group.)-.1 E/F1 10
/Times-Bold@0 SF(SO_A)144 112.8 Q(TT)-.95 E -.55(AC)-.9 G(H_REUSEPOR).55
E(T_CBPF)-.4 E F0(tak)3.438 E .937(es the same ar)-.1 F .937
(gument type as)-.18 F F1(SO_A)3.437 E(TT)-.95 E -.55(AC)-.9 G(H_FIL).55
E(TER)-.92 E F0(and)144 124.8 Q F1(SO_A)2.5 E(TT)-.95 E -.55(AC)-.9 G
(H_REUSEPOR).55 E(T_EBPF)-.4 E F0(tak)2.5 E(es the same ar)-.1 E
(gument type as)-.18 E F1(SO_A)2.5 E(TT)-.95 E -.55(AC)-.9 G(H_BPF).55 E
(.)-1.1 E F0 1.166(UDP support for this feature is a)144 141.6 R -.25
(va)-.2 G 1.166(ilable since Linux 4.5; TCP support is a).25 F -.25(va)
-.2 G 1.166(ilable since Linux).25 F(4.6.)144 153.6 Q F1(SO_BINDT)108
170.4 Q(ODEVICE)-.18 E F0 .195(Bind this sock)144 182.4 R .194
(et to a particular de)-.1 F .194(vice lik)-.25 F 2.694<6599>-.1 G .194
(eth0\232, as speci\214ed in the passed interf)-2.694 F .194(ace name.)
-.1 F .194(If the)5.194 F .851
(name is an empty string or the option length is zero, the sock)144
194.4 R .851(et de)-.1 F .852(vice binding is remo)-.25 F -.15(ve)-.15 G
3.352(d. The).15 F .343(passed option is a v)144 206.4 R .343
(ariable-length null-terminated interf)-.25 F .343
(ace name string with the maximum size of)-.1 F F1(IFN)144 218.4 Q
(AMSIZ)-.2 E F0 5.368(.I)C 2.868(fas)-5.368 G(ock)-2.868 E .368
(et is bound to an interf)-.1 F .368(ace, only pack)-.1 F .368
(ets recei)-.1 F -.15(ve)-.25 G 2.868(df).15 G .368
(rom that particular inter)-2.868 F(-)-.2 E -.1(fa)144 230.4 S 1.247
(ce are processed by the sock).1 F 3.747(et. Note)-.1 F 1.247
(that this w)3.747 F 1.246(orks only for some sock)-.1 F 1.246
(et types, particularly)-.1 F F1(AF_INET)144 242.4 Q F0(sock)2.5 E 2.5
(ets. It)-.1 F(is not supported for pack)2.5 E(et sock)-.1 E
(ets \(use normal)-.1 E F1(bind)2.5 E F0(\(2\) there\).)A 1.722
(Before Linux 3.8, this sock)144 259.2 R 1.722
(et option could be set, b)-.1 F 1.722(ut could not retrie)-.2 F -.15
(ve)-.25 G 4.223(dw).15 G(ith)-4.223 E F1(getsock)4.223 E(opt)-.15 E F0
(\(2\).)A .175(Since Linux 3.8, it is readable.)144 271.2 R(The)5.175 E
/F2 10/Times-Italic@0 SF(optlen)2.904 E F0(ar)2.914 E .174
(gument should contain the b)-.18 F(uf)-.2 E .174(fer size a)-.25 F -.25
(va)-.2 G .174(ilable to re-).25 F(cei)144 283.2 Q .575 -.15(ve t)-.25 H
.275(he de).15 F .275(vice name and is recommended to be)-.25 F F1(IFN)
2.775 E(AMSIZ)-.2 E F0 2.776(bytes. The)2.775 F .276(real de)2.776 F
.276(vice name length)-.25 F(is reported back in the)144 295.2 Q F2
(optlen)2.73 E F0(ar)2.74 E(gument.)-.18 E F1(SO_BR)108 312 Q -.4(OA)-.3
G(DCAST).4 E F0 1.017(Set or get the broadcast \215ag.)144 324 R 1.016
(When enabled, datagram sock)6.016 F 1.016(ets are allo)-.1 F 1.016
(wed to send pack)-.25 F 1.016(ets to a)-.1 F(broadcast address.)144 336
Q(This option has no ef)5 E(fect on stream-oriented sock)-.25 E(ets.)-.1
E F1(SO_BSDCOMP)108 352.8 Q -.95(AT)-.74 G F0 .174(Enable BSD b)144
364.8 R(ug-to-b)-.2 E .174(ug compatibility)-.2 F 5.174(.T)-.65 G .174
(his is used by the UDP protocol module in Linux 2.0 and)-5.174 F 2.619
(2.2. If)144 376.8 R .119(enabled, ICMP errors recei)2.619 F -.15(ve)
-.25 G 2.619(df).15 G .119(or a UDP sock)-2.619 F .119
(et will not be passed to the user program.)-.1 F(In)5.118 E .166
(later k)144 388.8 R .166(ernel v)-.1 F .167(ersions, support for this \
option has been phased out: Linux 2.4 silently ignores it, and)-.15 F
.67(Linux 2.6 generates a k)144 400.8 R .67(ernel w)-.1 F .669
(arning \(printk\(\)\) if a program uses this option.)-.1 F .669
(Linux 2.0 also en-)5.669 F .686(abled BSD b)144 412.8 R(ug-to-b)-.2 E
.686(ug compatibility options \(random header changing, skipping of the\
 broadcast)-.2 F(\215ag\) for ra)144 424.8 Q 2.5(ws)-.15 G(ock)-2.5 E
(ets with this option, b)-.1 E(ut that w)-.2 E(as remo)-.1 E -.15(ve)
-.15 G 2.5(di).15 G 2.5(nL)-2.5 G(inux 2.2.)-2.5 E F1(SO_DEB)108 441.6 Q
(UG)-.1 E F0 .222(Enable sock)144 453.6 R .222(et deb)-.1 F 2.722
(ugging. Allo)-.2 F .222(wed only for processes with the)-.25 F F1
(CAP_NET_ADMIN)2.722 E F0 .221(capability or)2.721 F(an ef)144 465.6 Q
(fecti)-.25 E .3 -.15(ve u)-.25 H(ser ID of 0.).15 E F1(SO_DET)108 482.4
Q -.55(AC)-.9 G(H_FIL).55 E(TER)-.92 E F0(\(since Linux 2.2\),)2.5 E F1
(SO_DET)2.5 E -.55(AC)-.9 G(H_BPF).55 E F0(\(since Linux 3.19\))2.5 E
.352(These tw)144 494.4 R 2.852(oo)-.1 G .352(ptions, which are synon)
-2.852 F .352(yms, may be used to remo)-.15 F .653 -.15(ve t)-.15 H .353
(he classic or e).15 F .353(xtended BPF pro-)-.15 F 1.051
(gram attached to a sock)144 506.4 R 1.051(et with either)-.1 F F1(SO_A)
3.551 E(TT)-.95 E -.55(AC)-.9 G(H_FIL).55 E(TER)-.92 E F0(or)3.551 E F1
(SO_A)3.551 E(TT)-.95 E -.55(AC)-.9 G(H_BPF).55 E F0 6.051(.T)C 1.05
(he op-)-6.051 F(tion v)144 518.4 Q(alue is ignored.)-.25 E F1
(SO_DOMAIN)108 535.2 Q F0(\(since Linux 2.6.32\))2.5 E(Retrie)144 547.2
Q -.15(ve)-.25 G 3.49(st).15 G .99(he sock)-3.49 F .99
(et domain as an inte)-.1 F(ger)-.15 E 3.49(,r)-.4 G .99(eturning a v)
-3.49 F .99(alue such as)-.25 F F1(AF_INET6)3.49 E F0 5.99(.S)C(ee)-5.99
E F1(sock)3.49 E(et)-.1 E F0(\(2\))A(for details.)144 559.2 Q(This sock)
5 E(et option is read-only)-.1 E(.)-.65 E F1(SO_ERR)108 576 Q(OR)-.3 E
F0(Get and clear the pending sock)144 588 Q(et error)-.1 E 5(.T)-.55 G
(his sock)-5 E(et option is read-only)-.1 E 5(.E)-.65 G(xpects an inte)
-5 E(ger)-.15 E(.)-.55 E F1(SO_DONTR)108 604.8 Q(OUTE)-.3 E F0(Don')144
616.8 Q 2.843(ts)-.18 G .343(end via a g)-2.843 F(ate)-.05 E -.1(wa)-.25
G 1.643 -.65(y, s).1 H .343(end only to directly connected hosts.).65 F
.342(The same ef)5.342 F .342(fect can be achie)-.25 F -.15(ve)-.25 G(d)
.15 E .313(by setting the)144 628.8 R F1(MSG_DONTR)2.814 E(OUTE)-.3 E F0
.314(\215ag on a sock)2.814 F(et)-.1 E F1(send)2.814 E F0 .314
(\(2\) operation.)B .314(Expects an inte)5.314 F .314(ger bool-)-.15 F
(ean \215ag.)144 640.8 Q F1(SO_INCOMING_CPU)108 657.6 Q F0
(\(gettable since Linux 3.19, settable since Linux 4.4\))2.5 E
(Sets or gets the CPU af)144 669.6 Q(\214nity of a sock)-.25 E 2.5
(et. Expects)-.1 F(an inte)2.5 E(ger \215ag.)-.15 E/F3 10/Courier@0 SF
(int cpu = 1;)164 686.4 Q
(setsockopt\(fd, SOL_SOCKET, SO_INCOMING_CPU, &cpu, sizeof\(cpu\)\);)164
698.4 Q F0 .635(Because all of the pack)144 715.2 R .635
(ets for a single stream \(i.e., all pack)-.1 F .634
(ets for the same 4-tuple\) arri)-.1 F .934 -.15(ve o)-.25 H 3.134(nt)
.15 G(he)-3.134 E 1.048(single RX queue that is associated with a parti\
cular CPU, the typical use case is to emplo)144 727.2 R 3.548(yo)-.1 G
(ne)-3.548 E 184.28(Linux 2018-02-02)72 768 R(3)205.67 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.9(SOCKET\(7\) Linux)72 48 R(Programmer')2.5
E 2.5(sM)-.55 G 122.9(anual SOCKET\(7\))-2.5 F .793
(listening process per RX queue, with the incoming \215o)144 84 R 3.292
(wb)-.25 G .792(eing handled by a listener on the same)-3.292 F 1.811
(CPU that is handling the RX queue.)144 96 R 1.811(This pro)6.811 F
1.812(vides optimal NUMA beha)-.15 F 1.812(vior and k)-.2 F 1.812
(eeps CPU)-.1 F(caches hot.)144 108 Q/F1 10/Times-Bold@0 SF(SO_KEEP)108
124.8 Q(ALIVE)-.74 E F0 .748(Enable sending of k)144 136.8 R(eep-ali)-.1
E 1.047 -.15(ve m)-.25 H .747(essages on connection-oriented sock).15 F
3.247(ets. Expects)-.1 F .747(an inte)3.247 F .747(ger bool-)-.15 F
(ean \215ag.)144 148.8 Q F1(SO_LINGER)108 165.6 Q F0(Sets or gets the)
144 177.6 Q F1(SO_LINGER)2.5 E F0 2.5(option. The)2.5 F(ar)2.5 E
(gument is a)-.18 E/F2 10/Times-Italic@0 SF(ling)2.59 E(er)-.1 E F0
(structure.)3.23 E/F3 10/Courier@0 SF(struct linger {)164 194.4 Q
(int l_onoff;)188 206.4 Q(/* linger active */)24 E(int l_linger;)188
218.4 Q(/* how many seconds to linger for */)18 E(};)164 230.4 Q F0 .417
(When enabled, a)144 247.2 R F1(close)2.917 E F0 .417(\(2\) or)B F1
(shutdo)2.917 E(wn)-.1 E F0 .417
(\(2\) will not return until all queued messages for the sock)B(et)-.1 E
(ha)144 259.2 Q .396 -.15(ve b)-.2 H .096
(een successfully sent or the linger timeout has been reached.).15 F
.096(Otherwise, the call returns im-)5.096 F .264
(mediately and the closing is done in the background.)144 271.2 R .265
(When the sock)5.265 F .265(et is closed as part of)-.1 F F1(exit)2.765
E F0(\(2\),)A(it al)144 283.2 Q -.1(wa)-.1 G
(ys lingers in the background.).1 E F1(SO_LOCK_FIL)108 300 Q(TER)-.92 E
F0 .325(When set, this option will pre)144 312 R -.15(ve)-.25 G .325
(nt changing the \214lters associated with the sock).15 F 2.824
(et. These)-.1 F .324(\214lters in-)2.824 F 1.915(clude an)144 324 R
4.415(ys)-.15 G 1.915(et using the sock)-4.415 F 1.916(et options)-.1 F
F1(SO_A)4.416 E(TT)-.95 E -.55(AC)-.9 G(H_FIL).55 E 1.916(TER, SO_A)-.92
F(TT)-.95 E -.55(AC)-.9 G(H_BPF).55 E 4.416(,S)-.92 G(O_A)-4.416 E -.92
(T-)-.95 G -1.25 -.9(TA C)144 336 T(H_REUSEPOR).9 E(T_CBPF)-.4 E F0(and)
2.5 E F1(SO_A)2.5 E(TT)-.95 E -.55(AC)-.9 G(H_REUSEPOR).55 E(T_EPBF)-.4
E F0(.)A .745(The typical use case is for a pri)144 352.8 R(vile)-.25 E
.745(ged process to set up a ra)-.15 F 3.245(ws)-.15 G(ock)-3.245 E .745
(et \(an operation that requires)-.1 F(the)144 364.8 Q F1(CAP_NET_RA)
3.653 E(W)-1.3 E F0 1.153(capability\), apply a restricti)3.653 F 1.453
-.15(ve \214)-.25 H(lter).15 E 3.653(,s)-.4 G 1.153(et the)-3.653 F F1
(SO_LOCK_FIL)3.653 E(TER)-.92 E F0(option,)3.653 E .132
(and then either drop its pri)144 376.8 R(vile)-.25 E .132
(ges or pass the sock)-.15 F .132(et \214le descriptor to an unpri)-.1 F
(vile)-.25 E .131(ged process via a)-.15 F(UNIX domain sock)144 388.8 Q
(et.)-.1 E .814(Once the)144 405.6 R F1(SO_LOCK_FIL)3.314 E(TER)-.92 E
F0 .815(option has been enabled, attempts to change or remo)3.314 F
1.115 -.15(ve t)-.15 H .815(he \214lter).15 F 2.713(attached to a sock)
144 417.6 R 2.712(et, or to disable the)-.1 F F1(SO_LOCK_FIL)5.212 E
(TER)-.92 E F0 2.712(option will f)5.212 F 2.712(ail with the error)-.1
F F1(EPERM)144 429.6 Q F0(.)A F1(SO_MARK)108 446.4 Q F0
(\(since Linux 2.6.25\))2.5 E 1.247(Set the mark for each pack)144 458.4
R 1.247(et sent through this sock)-.1 F 1.248
(et \(similar to the net\214lter MARK tar)-.1 F 1.248(get b)-.18 F(ut)
-.2 E(sock)144 470.4 Q 4.15(et-based\). Changing)-.1 F 1.65
(the mark can be used for mark-based routing without net\214lter or for)
4.15 F(pack)144 482.4 Q(et \214ltering.)-.1 E
(Setting this option requires the)5 E F1(CAP_NET_ADMIN)2.5 E F0
(capability)2.5 E(.)-.65 E F1(SO_OOBINLINE)108 499.2 Q F0 .927(If this \
option is enabled, out-of-band data is directly placed into the recei)
144 511.2 R 1.227 -.15(ve d)-.25 H .927(ata stream.).15 F(Other)5.927 E
(-)-.2 E(wise, out-of-band data is passed only when the)144 523.2 Q F1
(MSG_OOB)2.5 E F0(\215ag is set during recei)2.5 E(ving.)-.25 E F1(SO_P)
108 540 Q(ASSCRED)-.74 E F0 .694(Enable or disable the recei)144 552 R
.693(ving of the)-.25 F F1(SCM_CREDENTIALS)3.193 E F0 .693
(control message.)3.193 F -.15(Fo)5.693 G 3.193(rm).15 G .693(ore infor)
-3.193 F(-)-.2 E(mation see)144 564 Q F1(unix)2.5 E F0(\(7\).)A F1
(SO_PEEK_OFF)108 580.8 Q F0(\(since Linux 3.4\))2.5 E .299
(This option, which is currently supported only for)144 592.8 R F1(unix)
2.799 E F0 .299(\(7\) sock)B .3(ets, sets the v)-.1 F .3
(alue of the "peek of)-.25 F(f-)-.25 E(set" for the)144 604.8 Q F1 -.18
(re)2.5 G(cv).18 E F0(\(2\) system call when used with)A F1(MSG_PEEK)2.5
E F0(\215ag.)2.5 E .3(When this option is set to a ne)144 621.6 R -.05
(ga)-.15 G(ti).05 E .6 -.15(ve v)-.25 H .299
(alue \(it is set to \2551 for all ne)-.1 F 2.799(ws)-.25 G(ock)-2.799 E
.299(ets\), traditional beha)-.1 F(vior)-.2 E(is pro)144 633.6 Q(vided:)
-.15 E F1 -.18(re)2.5 G(cv).18 E F0(\(2\) with the)A F1(MSG_PEEK)2.5 E
F0(\215ag will peek data from the front of the queue.)2.5 E .097
(When the option is set to a v)144 650.4 R .097
(alue greater than or equal to zero, then the ne)-.25 F .098
(xt peek at data queued in)-.15 F .468(the sock)144 662.4 R .468
(et will occur at the byte of)-.1 F .467
(fset speci\214ed by the option v)-.25 F 2.967(alue. At)-.25 F .467
(the same time, the "peek)2.967 F(of)144 674.4 Q .084
(fset" will be incremented by the number of bytes that were peek)-.25 F
.085(ed from the queue, so that a sub-)-.1 F
(sequent peek will return the ne)144 686.4 Q(xt data in the queue.)-.15
E 2.032(If data is remo)144 703.2 R -.15(ve)-.15 G 4.531(df).15 G 2.031
(rom the front of the queue via a call to)-4.531 F F1 -.18(re)4.531 G
(cv).18 E F0 2.031(\(2\) \(or similar\) without the)B F1(MSG_PEEK)144
715.2 Q F0 .6(\215ag, the "peek of)3.1 F .601
(fset" will be decreased by the number of bytes remo)-.25 F -.15(ve)-.15
G 3.101(d. In).15 F(other)3.101 E -.1(wo)144 727.2 S .492(rds, recei).1
F .492(ving data without the)-.25 F F1(MSG_PEEK)2.992 E F0 .491
(\215ag will cause the "peek of)2.991 F .491(fset" to be adjusted to)
-.25 F 184.28(Linux 2018-02-02)72 768 R(4)205.67 E 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.9(SOCKET\(7\) Linux)72 48 R(Programmer')2.5
E 2.5(sM)-.55 G 122.9(anual SOCKET\(7\))-2.5 F .099
(maintain the correct relati)144 84 R .399 -.15(ve p)-.25 H .099
(osition in the queued data, so that a subsequent peek will retrie).15 F
.4 -.15(ve t)-.25 H(he).15 E(data that w)144 96 Q(ould ha)-.1 E .3 -.15
(ve b)-.2 H(een retrie).15 E -.15(ve)-.25 G 2.5(dh).15 G
(ad the data not been remo)-2.5 E -.15(ve)-.15 G(d.).15 E -.15(Fo)144
112.8 S 3.18(rd).15 G .68(atagram sock)-3.18 F .68(ets, if the "peek of)
-.1 F .68(fset" points to the middle of a pack)-.25 F .68
(et, the data returned will)-.1 F(be mark)144 124.8 Q(ed with the)-.1 E
/F1 10/Times-Bold@0 SF(MSG_TR)2.5 E(UNC)-.3 E F0(\215ag.)2.5 E .62
(The follo)144 141.6 R .62(wing e)-.25 F .62(xample serv)-.15 F .621
(es to illustrate the use of)-.15 F F1(SO_PEEK_OFF)3.121 E F0 5.621(.S)C
.621(uppose a stream sock)-5.621 F(et)-.1 E(has the follo)144 153.6 Q
(wing queued input data:)-.25 E(aabbccddeef)154 170.4 Q(f)-.25 E
(The follo)144 187.2 Q(wing sequence of)-.25 E F1 -.18(re)2.5 G(cv).18 E
F0(\(2\) calls w)A(ould ha)-.1 E .3 -.15(ve t)-.2 H(he ef).15 E
(fect noted in the comments:)-.25 E/F2 10/Courier@0 SF(int ov = 4;)164
204 Q(// Set peek offset to 4)108 E
(setsockopt\(fd, SOL_SOCKET, SO_PEEK_OFF, &ov, sizeof\(ov\)\);)164 216 Q
(recv\(fd, buf, 2, MSG_PEEK\);)164 240 Q(// Peeks "cc"; offset set to 6)
12 E(recv\(fd, buf, 2, MSG_PEEK\);)164 252 Q
(// Peeks "dd"; offset set to 8)12 E(recv\(fd, buf, 2, 0\);)164 264 Q
(// Reads "aa"; offset set to 6)54 E(recv\(fd, buf, 2, MSG_PEEK\);)164
276 Q(// Peeks "ee"; offset set to 8)12 E F1(SO_PEERCRED)108 292.8 Q F0
1.096
(Return the credentials of the foreign process connected to this sock)
144 304.8 R 3.595(et. This)-.1 F 1.095(is possible only for)3.595 F
(connected)144 316.8 Q F1(AF_UNIX)2.747 E F0 .247(stream sock)2.747 F
.247(ets and)-.1 F F1(AF_UNIX)2.747 E F0 .248(stream and datagram sock)
2.747 F .248(et pairs created us-)-.1 F(ing)144 328.8 Q F1(sock)2.521 E
(etpair)-.1 E F0 .021(\(2\); see)B F1(unix)2.521 E F0 2.521(\(7\). The)B
.021(returned credentials are those that were in ef)2.521 F .02
(fect at the time of)-.25 F 4.105(the call to)144 340.8 R F1(connect)
6.605 E F0 4.105(\(2\) or)B F1(sock)6.605 E(etpair)-.1 E F0 6.605
(\(2\). The)B(ar)6.605 E 4.105(gument is a)-.18 F/F3 10/Times-Italic@0
SF(ucr)6.686 E(ed)-.37 E F0 4.106(structure; de\214ne the)7.376 F F1
(_GNU_SOURCE)144 352.8 Q F0 .127
(feature test macro to obtain the de\214nition of that structure from)
2.627 F F3(<sys/soc)2.286 E -.1(ke)-.2 G(t.h>).1 E F0(.)A(This sock)144
364.8 Q(et option is read-only)-.1 E(.)-.65 E F1(SO_PRIORITY)108 381.6 Q
F0 .463(Set the protocol-de\214ned priority for all pack)144 393.6 R
.463(ets to be sent on this sock)-.1 F 2.963(et. Linux)-.1 F .463
(uses this v)2.963 F .463(alue to)-.25 F .765(order the netw)144 405.6 R
.765(orking queues: pack)-.1 F .765
(ets with a higher priority may be processed \214rst depending on)-.1 F
1.29(the selected de)144 417.6 R 1.29(vice queueing discipline.)-.25 F
1.291(Setting a priority outside the range 0 to 6 requires the)6.29 F F1
(CAP_NET_ADMIN)144 429.6 Q F0(capability)2.5 E(.)-.65 E F1(SO_PR)108
446.4 Q -1.88 -.4(OT O)-.3 H(COL).4 E F0(\(since Linux 2.6.32\))2.5 E
(Retrie)144 458.4 Q -.15(ve)-.25 G 4.33(st).15 G 1.83(he sock)-4.33 F
1.83(et protocol as an inte)-.1 F(ger)-.15 E 4.33(,r)-.4 G 1.83
(eturning a v)-4.33 F 1.83(alue such as)-.25 F F1(IPPR)4.33 E -1.88 -.4
(OT O)-.3 H(_SCTP).4 E F0 6.83(.S)C(ee)-6.83 E F1(sock)144 470.4 Q(et)
-.1 E F0(\(2\) for details.)A(This sock)5 E(et option is read-only)-.1 E
(.)-.65 E F1(SO_RCVB)108 487.2 Q(UF)-.1 E F0 .614
(Sets or gets the maximum sock)144 499.2 R .614(et recei)-.1 F .914 -.15
(ve b)-.25 H(uf)-.05 E .614(fer in bytes.)-.25 F .615(The k)5.614 F .615
(ernel doubles this v)-.1 F .615(alue \(to allo)-.25 F(w)-.25 E .532
(space for bookk)144 511.2 R .532(eeping o)-.1 F -.15(ve)-.15 G .532
(rhead\) when it is set using).15 F F1(setsock)3.032 E(opt)-.15 E F0
.532(\(2\), and this doubled v)B .532(alue is re-)-.25 F .253(turned by)
144 523.2 R F1(getsock)2.753 E(opt)-.15 E F0 2.753(\(2\). The)B(def)
2.753 E .253(ault v)-.1 F .253(alue is set by the)-.25 F F3(/pr)3.904 E
(oc/sys/net/cor)-.45 E(e/rmem_default)-.37 E F0 .254(\214le, and)3.434 F
.565(the maximum allo)144 535.2 R .565(wed v)-.25 F .565
(alue is set by the)-.25 F F3(/pr)4.215 E(oc/sys/net/cor)-.45 E
(e/rmem_max)-.37 E F0 3.065(\214le. The)3.595 F .565(minimum \(dou-)
3.065 F(bled\) v)144 547.2 Q(alue for this option is 256.)-.25 E F1
(SO_RCVB)108 564 Q(UFFORCE)-.1 E F0(\(since Linux 2.6.14\))2.5 E .077
(Using this sock)144 576 R .077(et option, a pri)-.1 F(vile)-.25 E .078
(ged \()-.15 F F1(CAP_NET_ADMIN)A F0 2.578(\)p)C .078
(rocess can perform the same task as)-2.578 F F1(SO_RCVB)144 588 Q(UF)
-.1 E F0 2.5(,b)C(ut the)-2.7 E F3(rmem_max)2.55 E F0(limit can be o)
3.03 E -.15(ve)-.15 G(rridden.).15 E F1(SO_RCVLO)108 604.8 Q -1.05 -1.2
(WA T)-.5 H F0(and)3.7 E F1(SO_SNDLO)2.5 E -1.05 -1.2(WA T)-.5 H F0 .428
(Specify the minimum number of bytes in the b)144 616.8 R(uf)-.2 E .428
(fer until the sock)-.25 F .427(et layer will pass the data to the)-.1 F
.606(protocol \()144 628.8 R F1(SO_SNDLO)A -1.05 -1.2(WA T)-.5 H F0
3.106(\)o)1.2 G 3.106(rt)-3.106 G .606(he user on recei)-3.106 F .606
(ving \()-.25 F F1(SO_RCVLO)A -1.05 -1.2(WA T)-.5 H F0 3.107(\). These)
1.2 F(tw)3.107 E 3.107(ov)-.1 G .607(alues are)-3.357 F .58
(initialized to 1.)144 640.8 R F1(SO_SNDLO)5.58 E -1.05 -1.2(WA T)-.5 H
F0 .58(is not changeable on Linux \()4.28 F F1(setsock)A(opt)-.15 E F0
.58(\(2\) f)B .58(ails with the error)-.1 F F1(ENOPR)144 652.8 Q -1.88
-.4(OT O)-.3 H(OPT).4 E F0(\).)A F1(SO_RCVLO)6.373 E -1.05 -1.2(WA T)-.5
H F0 1.373(is changeable only since Linux 2.4.)5.073 F(The)6.373 E F1
(select)3.873 E F0 1.373(\(2\) and)B F1(poll)144 664.8 Q F0 .68
(\(2\) system calls currently do not respect the)B F1(SO_RCVLO)3.179 E
-1.05 -1.2(WA T)-.5 H F0 .679(setting on Linux, and mark a)4.379 F(sock)
144 676.8 Q .793(et readable when e)-.1 F -.15(ve)-.25 G -5.792 3.293
(na s).15 H .794(ingle byte of data is a)-3.293 F -.25(va)-.2 G 3.294
(ilable. A).25 F .794(subsequent read from the sock)3.294 F(et)-.1 E
(will block until)144 688.8 Q F1(SO_RCVLO)2.5 E -1.05 -1.2(WA T)-.5 H F0
(bytes are a)3.7 E -.25(va)-.2 G(ilable.).25 E F1(SO_RCVTIMEO)108 705.6
Q F0(and)2.5 E F1(SO_SNDTIMEO)2.5 E F0 2.264(Specify the recei)144 717.6
R 2.264(ving or sending timeouts until reporting an error)-.25 F 7.263
(.T)-.55 G 2.263(he ar)-7.263 F 2.263(gument is a)-.18 F F3(struct)5.103
E(time)144 729.6 Q(val)-.15 E F0 6.01(.I).51 G 3.51(fa)-6.01 G 3.51(ni)
-3.51 G 1.011(nput or output function blocks for this period of time, a\
nd data has been sent or)-3.51 F 184.28(Linux 2018-02-02)72 768 R(5)
205.67 E 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.9(SOCKET\(7\) Linux)72 48 R(Programmer')2.5
E 2.5(sM)-.55 G 122.9(anual SOCKET\(7\))-2.5 F(recei)144 84 Q -.15(ve)
-.25 G 1.116(d, the return v).15 F 1.115(alue of that function will be \
the amount of data transferred; if no data has)-.25 F .264(been transfe\
rred and the timeout has been reached, then \2551 is returned with)144
96 R/F1 10/Times-Italic@0 SF(errno)2.955 E F0 .265(set to)2.945 F/F2 10
/Times-Bold@0 SF(EA)2.765 E(GAIN)-.55 E F0(or)144 108 Q F2(EW)2.754 E
(OULDBLOCK)-.1 E F0 2.753(,o)C(r)-2.753 E F2(EINPR)2.753 E(OGRESS)-.3 E
F0(\(for)2.753 E F2(connect)2.753 E F0 .253(\(2\)\) just as if the sock)
B .253(et w)-.1 F .253(as speci\214ed to)-.1 F .791(be nonblocking.)144
120 R .791(If the timeout is set to zero \(the def)5.791 F .792
(ault\), then the operation will ne)-.1 F -.15(ve)-.25 G 3.292(rt).15 G
(imeout.)-3.292 E -.35(Ti)144 132 S 1.56(meouts only ha).35 F 1.86 -.15
(ve e)-.2 H -.25(ff).15 G 1.56(ect for system calls that perform sock)
.25 F 1.56(et I/O \(e.g.,)-.1 F F2 -.18(re)4.06 G(ad).18 E F0(\(2\),)A
F2 -.18(re)4.06 G(cvmsg).18 E F0(\(2\),)A F2(send)144 144 Q F0(\(2\),)A
F2(sendmsg)2.5 E F0(\(2\)\); timeouts ha)A .3 -.15(ve n)-.2 H 2.5(oe).15
G -.25(ff)-2.5 G(ect for).25 E F2(select)2.5 E F0(\(2\),)A F2(poll)2.5 E
F0(\(2\),)A F2(epoll_wait)2.5 E F0(\(2\), and so on.)A F2(SO_REUSEADDR)
108 160.8 Q F0 .676(Indicates that the rules used in v)144 172.8 R .677
(alidating addresses supplied in a)-.25 F F2(bind)3.177 E F0 .677
(\(2\) call should allo)B 3.177(wr)-.25 G(euse)-3.177 E .15
(of local addresses.)144 184.8 R -.15(Fo)5.15 G(r).15 E F2(AF_INET)2.65
E F0(sock)2.65 E .149(ets this means that a sock)-.1 F .149
(et may bind, e)-.1 F .149(xcept when there is)-.15 F 2.386(an acti)144
196.8 R 2.686 -.15(ve l)-.25 H 2.386(istening sock).15 F 2.386
(et bound to the address.)-.1 F 2.387(When the listening sock)7.387 F
2.387(et is bound to)-.1 F F2(IN-)4.887 E(ADDR_ANY)144 208.8 Q F0 .544(\
with a speci\214c port then it is not possible to bind to this port for\
 an)3.044 F 3.043(yl)-.15 G .543(ocal address.)-3.043 F(Ar)144 220.8 Q
(gument is an inte)-.18 E(ger boolean \215ag.)-.15 E F2(SO_REUSEPOR)108
237.6 Q(T)-.4 E F0(\(since Linux 3.9\))2.5 E 1.503(Permits multiple)144
249.6 R F2(AF_INET)4.003 E F0(or)4.004 E F2(AF_INET6)4.004 E F0(sock)
4.004 E 1.504(ets to be bound to an identical sock)-.1 F 1.504
(et address.)-.1 F .644(This option must be set on each sock)144 261.6 R
.644(et \(including the \214rst sock)-.1 F .643(et\) prior to calling)
-.1 F F2(bind)3.143 E F0 .643(\(2\) on the)B(sock)144 273.6 Q 3.103
(et. T)-.1 F 3.103(op)-.8 G(re)-3.103 E -.15(ve)-.25 G .603(nt port hij\
acking, all of the processes binding to the same address must ha).15 F
.904 -.15(ve t)-.2 H(he).15 E(same ef)144 285.6 Q(fecti)-.25 E .3 -.15
(ve U)-.25 H 2.5(ID. This).15 F(option can be emplo)2.5 E
(yed with both TCP and UDP sock)-.1 E(ets.)-.1 E -.15(Fo)144 302.4 S
2.514(rT).15 G .014(CP sock)-2.514 F .014(ets, this option allo)-.1 F
(ws)-.25 E F2(accept)2.514 E F0 .014(\(2\) load distrib)B .014
(ution in a multi-threaded serv)-.2 F .014(er to be im-)-.15 F(pro)144
314.4 Q -.15(ve)-.15 G 3.364(db).15 G 3.364(yu)-3.364 G .864
(sing a distinct listener sock)-3.364 F .864(et for each thread.)-.1 F
.865(This pro)5.864 F .865(vides impro)-.15 F -.15(ve)-.15 G 3.365(dl)
.15 G .865(oad distrib)-3.365 F(u-)-.2 E .545
(tion as compared to traditional techniques such using a single)144
326.4 R F2(accept)3.044 E F0 .544(\(2\)ing thread that distrib)B(utes)
-.2 E(connections, or ha)144 338.4 Q
(ving multiple threads that compete to)-.2 E F2(accept)2.5 E F0
(\(2\) from the same sock)A(et.)-.1 E -.15(Fo)144 355.2 S 3.238(rU).15 G
.738(DP sock)-3.238 F .738(ets, the use of this option can pro)-.1 F
.738(vide better distrib)-.15 F .738(ution of incoming datagrams to)-.2
F 1.144(multiple processes \(or threads\) as compared to the traditiona\
l technique of ha)144 367.2 R 1.143(ving multiple pro-)-.2 F
(cesses compete to recei)144 379.2 Q .3 -.15(ve d)-.25 H
(atagrams on the same sock).15 E(et.)-.1 E F2(SO_RXQ_O)108 396 Q(VFL)-.5
E F0(\(since Linux 2.6.33\))2.5 E 1.094
(Indicates that an unsigned 32-bit v)144 408 R 1.095
(alue ancillary message \(cmsg\) should be attached to recei)-.25 F -.15
(ve)-.25 G(d).15 E(skbs indicating the number of pack)144 420 Q
(ets dropped by the sock)-.1 E(et since its creation.)-.1 E F2(SO_SNDB)
108 436.8 Q(UF)-.1 E F0 1.248(Sets or gets the maximum sock)144 448.8 R
1.248(et send b)-.1 F(uf)-.2 E 1.248(fer in bytes.)-.25 F 1.248(The k)
6.248 F 1.248(ernel doubles this v)-.1 F 1.248(alue \(to allo)-.25 F(w)
-.25 E .532(space for bookk)144 460.8 R .532(eeping o)-.1 F -.15(ve)-.15
G .532(rhead\) when it is set using).15 F F2(setsock)3.032 E(opt)-.15 E
F0 .532(\(2\), and this doubled v)B .532(alue is re-)-.25 F .23
(turned by)144 472.8 R F2(getsock)2.73 E(opt)-.15 E F0 2.73(\(2\). The)B
(def)2.73 E .23(ault v)-.1 F .23(alue is set by the)-.25 F F1(/pr)3.88 E
(oc/sys/net/cor)-.45 E(e/wmem_default)-.37 E F0 .23(\214le and)3.41 F
.333(the maximum allo)144 484.8 R .333(wed v)-.25 F .333
(alue is set by the)-.25 F F1(/pr)3.983 E(oc/sys/net/cor)-.45 E
(e/wmem_max)-.37 E F0 2.834(\214le. The)3.364 F .334(minimum \(dou-)
2.834 F(bled\) v)144 496.8 Q(alue for this option is 2048.)-.25 E F2
(SO_SNDB)108 513.6 Q(UFFORCE)-.1 E F0(\(since Linux 2.6.14\))2.5 E .078
(Using this sock)144 525.6 R .078(et option, a pri)-.1 F(vile)-.25 E
.078(ged \()-.15 F F2(CAP_NET_ADMIN)A F0 2.578(\)p)C .077
(rocess can perform the same task as)-2.578 F F2(SO_SNDB)144 537.6 Q(UF)
-.1 E F0 2.5(,b)C(ut the)-2.7 E F1(wmem_max)2.84 E F0(limit can be o)
3.03 E -.15(ve)-.15 G(rridden.).15 E F2(SO_TIMEST)108 554.4 Q(AMP)-.9 E
F0 .877(Enable or disable the recei)144 566.4 R .877(ving of the)-.25 F
F2(SO_TIMEST)3.378 E(AMP)-.9 E F0 .878(control message.)3.378 F .878
(The timestamp con-)5.878 F .109(trol message is sent with le)144 578.4
R -.15(ve)-.25 G(l).15 E F2(SOL_SOCKET)2.609 E F0 .109(and the)2.609 F
F1(cmsg_data)2.809 E F0 .108(\214eld is a)2.869 F F1 .108(struct time)
2.948 F(val)-.15 E F0(indicat-)3.118 E .397
(ing the reception time of the last pack)144 590.4 R .397
(et passed to the user in this call.)-.1 F(See)5.398 E F2(cmsg)2.898 E
F0 .398(\(3\) for details on)B(control messages.)144 602.4 Q F2(SO_TYPE)
108 619.2 Q F0(Gets the sock)144 631.2 Q(et type as an inte)-.1 E
(ger \(e.g.,)-.15 E F2(SOCK_STREAM)2.5 E F0 2.5(\). This)B(sock)2.5 E
(et option is read-only)-.1 E(.)-.65 E F2(SO_B)108 648 Q(USY_POLL)-.1 E
F0(\(since Linux 3.11\))2.5 E 1.145
(Sets the approximate time in microseconds to b)144 660 R 1.144
(usy poll on a blocking recei)-.2 F 1.444 -.15(ve w)-.25 H 1.144
(hen there is no).15 F 2.617(data. Increasing)144 672 R .117(this v)
2.617 F .117(alue requires)-.25 F F2(CAP_NET_ADMIN)2.617 E F0 5.117(.T)C
.118(he def)-5.117 F .118(ault for this option is controlled)-.1 F
(by the)144 684 Q F1(/pr)3.65 E(oc/sys/net/cor)-.45 E(e/b)-.37 E(usy_r)
-.2 E(ead)-.37 E F0(\214le.)3.27 E .909(The v)144 700.8 R .909
(alue in the)-.25 F F1(/pr)4.559 E(oc/sys/net/cor)-.45 E(e/b)-.37 E
(usy_poll)-.2 E F0 .908(\214le determines ho)3.918 F 3.408(wl)-.25 G
(ong)-3.408 E F2(select)3.408 E F0 .908(\(2\) and)B F2(poll)3.408 E F0
.908(\(2\) will)B -.2(bu)144 712.8 S 1.15(sy poll when the).2 F 3.65(yo)
-.15 G 1.15(perate on sock)-3.65 F 1.151(ets with)-.1 F F2(SO_B)3.651 E
(USY_POLL)-.1 E F0 1.151(set and no e)3.651 F -.15(ve)-.25 G 1.151
(nts to report are).15 F(found.)144 724.8 Q 184.28(Linux 2018-02-02)72
768 R(6)205.67 E 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.9(SOCKET\(7\) Linux)72 48 R(Programmer')2.5
E 2.5(sM)-.55 G 122.9(anual SOCKET\(7\))-2.5 F .862(In both cases, b)144
84 R .861(usy polling will only be done when the sock)-.2 F .861
(et last recei)-.1 F -.15(ve)-.25 G 3.361(dd).15 G .861(ata from a netw)
-3.361 F(ork)-.1 E(de)144 96 Q(vice that supports this option.)-.25 E
.786(While b)144 112.8 R .786(usy polling may impro)-.2 F 1.086 -.15
(ve l)-.15 H(atenc).15 E 3.286(yo)-.15 G 3.286(fs)-3.286 G .786
(ome applications, care must be tak)-3.286 F .786(en when using it)-.1 F
(since this will increase both CPU utilization and po)144 124.8 Q
(wer usage.)-.25 E/F1 10/Times-Bold@0 SF(Signals)87 141.6 Q F0 .715
(When writing onto a connection-oriented sock)108 153.6 R .715
(et that has been shut do)-.1 F .714
(wn \(by the local or the remote end\))-.25 F F1(SIGPIPE)108 165.6 Q F0
.53(is sent to the writing process and)3.03 F F1(EPIPE)3.03 E F0 .531
(is returned.)3.03 F .531(The signal is not sent when the write call)
5.531 F(speci\214ed the)108 177.6 Q F1(MSG_NOSIGN)2.5 E(AL)-.2 E F0
(\215ag.)2.5 E 1.325(When requested with the)108 194.4 R F1(FIOSET)3.825
E -.5(OW)-.18 G 3.824(Nf).5 G(cntl)-3.824 E F0 1.324(\(2\) or)B F1 1.324
(SIOCSPGRP ioctl)3.824 F F0(\(2\),)A F1(SIGIO)3.824 E F0 1.324
(is sent when an I/O)3.824 F -2.15 -.25(ev e)108 206.4 T 1.172
(nt occurs.).25 F 1.172(It is possible to use)6.172 F F1(poll)3.672 E F0
1.172(\(2\) or)B F1(select)3.672 E F0 1.172
(\(2\) in the signal handler to \214nd out which sock)B 1.173(et the)-.1
F -2.15 -.25(ev e)108 218.4 T .495(nt occurred on.).25 F .494
(An alternati)5.494 F .794 -.15(ve \()-.25 H .494
(in Linux 2.2\) is to set a real-time signal using the).15 F F1 .494
(F_SETSIG fcntl)2.994 F F0(\(2\);)A .814(the handler of the real time s\
ignal will be called with the \214le descriptor in the)108 230.4 R/F2 10
/Times-Italic@0 SF(si_fd)3.654 E F0 .814(\214eld of its)4.084 F F2
(siginfo_t)3.654 E F0(.).68 E(See)108 242.4 Q F1(fcntl)2.5 E F0
(\(2\) for more information.)A 1.129(Under some circumstances \(e.g., m\
ultiple processes accessing a single sock)108 259.2 R 1.129
(et\), the condition that caused)-.1 F(the)108 271.2 Q F1(SIGIO)2.545 E
F0 .045(may ha)2.545 F .345 -.15(ve a)-.2 H .045
(lready disappeared when the process reacts to the signal.).15 F .046
(If this happens, the process)5.046 F(should w)108 283.2 Q(ait ag)-.1 E
(ain because Linux will resend the signal later)-.05 E(.)-.55 E F1(/pr)
87 300 Q(oc interfaces)-.18 E F0(The core sock)108 312 Q(et netw)-.1 E
(orking parameters can be accessed via \214les in the directory)-.1 E F2
(/pr)3.65 E(oc/sys/net/cor)-.45 E(e/)-.37 E F0(.)1.58 E F2(rmem_default)
108.05 328.8 Q F0(contains the def)144 340.8 Q
(ault setting in bytes of the sock)-.1 E(et recei)-.1 E .3 -.15(ve b)
-.25 H(uf)-.05 E(fer)-.25 E(.)-.55 E F2(rmem_max)108.05 357.6 Q F0 1.862
(contains the maximum sock)144 369.6 R 1.862(et recei)-.1 F 2.162 -.15
(ve b)-.25 H(uf)-.05 E 1.862
(fer size in bytes which a user may set by using the)-.25 F F1(SO_RCVB)
144 381.6 Q(UF)-.1 E F0(sock)2.5 E(et option.)-.1 E F2(wmem_default)
108.34 398.4 Q F0(contains the def)144 410.4 Q
(ault setting in bytes of the sock)-.1 E(et send b)-.1 E(uf)-.2 E(fer)
-.25 E(.)-.55 E F2(wmem_max)108.34 427.2 Q F0 2.495
(contains the maximum sock)144 439.2 R 2.495(et send b)-.1 F(uf)-.2 E
2.496(fer size in bytes which a user may set by using the)-.25 F F1
(SO_SNDB)144 451.2 Q(UF)-.1 E F0(sock)2.5 E(et option.)-.1 E F2(messa)
108.38 468 Q -.1(ge)-.1 G(_cost).1 E F0(and)3.18 E F2(messa)2.88 E -.1
(ge)-.1 G(_b).1 E(ur)-.2 E(st)-.1 E F0 .645(con\214gure the tok)144 480
R .645(en b)-.1 F(uck)-.2 E .645(et \214lter used to load limit w)-.1 F
.645(arning messages caused by e)-.1 F .645(xternal netw)-.15 F(ork)-.1
E -2.15 -.25(ev e)144 492 T(nts.).25 E F2(netde)108.36 508.8 Q
(v_max_bac)-.15 E(klo)-.2 E(g)-.1 E F0(Maximum number of pack)144 520.8
Q(ets in the global input queue.)-.1 E F2(optmem_max)108.23 537.6 Q F0
(Maximum length of ancillary data and user control data lik)144 549.6 Q
2.5(et)-.1 G(he io)-2.5 E -.15(ve)-.15 G(cs per sock).15 E(et.)-.1 E F1
(Ioctls)87 566.4 Q F0(These operations can be accessed using)108 578.4 Q
F1(ioctl)2.5 E F0(\(2\):)A/F3 10/Courier-Oblique@0 SF(error)127.51 595.2
Q/F4 10/Courier-Bold@0 SF 6(=i)6.88 G(octl\()-6 E F3(ip_socket)-.52 E F4
(,)A F3(ioctl_type)5.48 E F4(,).27 E F3(&value_result)5.34 E F4(\);)A F1
(SIOCGST)108 612 Q(AMP)-.9 E F0 .948(Return a)144 624 R F2 .948
(struct time)3.788 F(val)-.15 E F0 .948(with the recei)3.958 F 1.248
-.15(ve t)-.25 H .948(imestamp of the last pack).15 F .948
(et passed to the user)-.1 F 5.949(.T)-.55 G .949(his is)-5.949 F 1.618
(useful for accurate round trip time measurements.)144 636 R(See)6.618 E
F1(setitimer)4.118 E F0 1.617(\(2\) for a description of)B F2(struct)
4.457 E(time)144 648 Q(val)-.15 E F0 5.761(.T).51 G .762
(his ioctl should be used only if the sock)-5.761 F .762(et option)-.1 F
F1(SO_TIMEST)3.262 E(AMP)-.9 E F0 .762(is not set on the)3.262 F(sock)
144 660 Q 2.844(et. Otherwise,)-.1 F .344
(it returns the timestamp of the last pack)2.844 F .343(et that w)-.1 F
.343(as recei)-.1 F -.15(ve)-.25 G 2.843(dw).15 G(hile)-2.843 E F1
(SO_TIME-)2.843 E(ST)144 672 Q(AMP)-.9 E F0 -.1(wa)3.122 G 3.122(sn).1 G
.622(ot set, or it f)-3.122 F .622(ails if no such pack)-.1 F .622
(et has been recei)-.1 F -.15(ve)-.25 G .622(d, \(i.e.,).15 F F1(ioctl)
3.123 E F0 .623(\(2\) returns \2551 with)B F2(errno)144.19 684 Q F0
(set to)2.68 E F1(ENOENT)2.5 E F0(\).)A F1(SIOCSPGRP)108 700.8 Q F0 .438
(Set the process or process group that is to recei)144 712.8 R -.15(ve)
-.25 G F1(SIGIO)3.087 E F0(or)2.937 E F1(SIGURG)2.937 E F0 .437
(signals when I/O becomes)2.937 F .495(possible or ur)144 724.8 R .495
(gent data is a)-.18 F -.25(va)-.2 G 2.995(ilable. The).25 F(ar)2.995 E
.495(gument is a pointer to a)-.18 F F2(pid_t)4.246 E F0 5.496(.F).68 G
.496(or further details, see)-5.646 F 184.28(Linux 2018-02-02)72 768 R
(7)205.67 E 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.9(SOCKET\(7\) Linux)72 48 R(Programmer')2.5
E 2.5(sM)-.55 G 122.9(anual SOCKET\(7\))-2.5 F(the description of)144 84
Q/F1 10/Times-Bold@0 SF(F_SET)2.5 E -.5(OW)-.18 G(N).5 E F0(in)2.5 E F1
(fcntl)2.5 E F0(\(2\).)A F1(FIO)108 100.8 Q(ASYNC)-.4 E F0 .123
(Change the)144 112.8 R F1(O_ASYNC)2.623 E F0 .123
(\215ag to enable or disable asynchronous I/O mode of the sock)2.623 F
2.622(et. Asynchro-)-.1 F .957(nous I/O mode means that the)144 124.8 R
F1(SIGIO)3.457 E F0 .958(signal or the signal set with)3.458 F F1
(F_SETSIG)3.458 E F0 .958(is raised when a)3.458 F(ne)144 136.8 Q 2.5
(wI)-.25 G(/O e)-2.5 E -.15(ve)-.25 G(nt occurs.).15 E(Ar)144 153.6 Q
.165(gument is an inte)-.18 F .165(ger boolean \215ag.)-.15 F .164
(\(This operation is synon)5.165 F .164(ymous with the use of)-.15 F F1
(fcntl)2.664 E F0 .164(\(2\) to set)B(the)144 165.6 Q F1(O_ASYNC)2.5 E
F0(\215ag.\))2.5 E F1(SIOCGPGRP)108 182.4 Q F0 .039
(Get the current process or process group that recei)144 194.4 R -.15
(ve)-.25 G(s).15 E F1(SIGIO)2.539 E F0(or)2.539 E F1(SIGURG)2.54 E F0
.04(signals, or 0 when none)2.54 F(is set.)144 206.4 Q -1.11(Va)108
223.2 S(lid)1.11 E F1(fcntl)2.5 E F0(\(2\) operations:)A F1(FIOGET)108
240 Q -.5(OW)-.18 G(N).5 E F0(The same as the)144 252 Q F1
(SIOCGPGRP ioctl)2.5 E F0(\(2\).)A F1(FIOSET)108 268.8 Q -.5(OW)-.18 G
(N).5 E F0(The same as the)144 280.8 Q F1(SIOCSPGRP ioctl)2.5 E F0
(\(2\).)A/F2 10.95/Times-Bold@0 SF(VERSIONS)72 297.6 Q F1(SO_BINDT)108
309.6 Q(ODEVICE)-.18 E F0 -.1(wa)2.717 G 2.717(si).1 G .216
(ntroduced in Linux 2.0.30.)-2.717 F F1(SO_P)5.216 E(ASSCRED)-.74 E F0
.216(is ne)2.716 F 2.716(wi)-.25 G 2.716(nL)-2.716 G .216(inux 2.2.)
-2.716 F(The)5.216 E/F3 10/Times-Italic@0 SF(/pr)3.866 E(oc)-.45 E F0
(interf)108 321.6 Q 1.862(aces were introduced in Linux 2.2.)-.1 F F1
(SO_RCVTIMEO)6.862 E F0(and)4.362 E F1(SO_SNDTIMEO)4.362 E F0 1.862
(are supported since)4.362 F(Linux 2.3.41.)108 333.6 Q(Earlier)5 E 2.5
(,t)-.4 G(imeouts were \214x)-2.5 E
(ed to a protocol-speci\214c setting, and could not be read or written.)
-.15 E F2(NO)72 350.4 Q(TES)-.438 E F0 .7
(Linux assumes that half of the send/recei)108 362.4 R 1 -.15(ve b)-.25
H(uf)-.05 E .699(fer is used for internal k)-.25 F .699
(ernel structures; thus the v)-.1 F .699(alues in)-.25 F
(the corresponding)108 374.4 Q F3(/pr)3.65 E(oc)-.45 E F0
(\214les are twice what can be observ)2.81 E(ed on the wire.)-.15 E .644
(Linux will allo)108 391.2 R 3.144(wp)-.25 G .644
(ort reuse only with the)-3.144 F F1(SO_REUSEADDR)3.145 E F0 .645
(option when this option w)3.145 F .645(as set both in the)-.1 F(pre)108
403.2 Q .083(vious program that performed a)-.25 F F1(bind)2.583 E F0
.083(\(2\) to the port and in the program that w)B .082
(ants to reuse the port.)-.1 F(This)5.082 E(dif)108 415.2 Q 3.082(fers \
from some implementations \(e.g., FreeBSD\) where only the later progra\
m needs to set the)-.25 F F1(SO_REUSEADDR)108 427.2 Q F0 3.477
(option. T)3.477 F .976(ypically this dif)-.8 F .976(ference is in)-.25
F .976(visible, since, for e)-.4 F .976(xample, a serv)-.15 F .976
(er program is)-.15 F(designed to al)108 439.2 Q -.1(wa)-.1 G
(ys set this option.).1 E F2(SEE ALSO)72 456 Q F1(wir)108 468 Q(eshark)
-.18 E F0(\(1\),)A F1(bpf)6.171 E F0(\(2\),)A F1(connect)6.171 E F0
(\(2\),)A F1(getsock)6.171 E(opt)-.15 E F0(\(2\),)A F1(setsock)6.171 E
(opt)-.15 E F0(\(2\),)A F1(sock)6.172 E(et)-.1 E F0(\(2\),)A F1(pcap)
6.172 E F0(\(3\),)A F1(capabilities)6.172 E F0(\(7\),)A F1(ddp)108 480 Q
F0(\(7\),)A F1(ip)2.5 E F0(\(7\),)A F1(pack)2.5 E(et)-.1 E F0(\(7\),)A
F1(tcp)2.5 E F0(\(7\),)A F1(udp)2.5 E F0(\(7\),)A F1(unix)2.5 E F0
(\(7\),)A F1(tcpdump)2.5 E F0(\(8\))A F2(COLOPHON)72 496.8 Q F0 .341
(This page is part of release 4.16 of the Linux)108 508.8 R F3(man-pa)
3.221 E -.1(ge)-.1 G(s).1 E F0 2.84(project. A)3.11 F .34
(description of the project, information)2.84 F 11.103
(about reporting b)108 520.8 R 11.103(ugs, and the latest v)-.2 F 11.103
(ersion of this page, can be found at)-.15 F(https://www)108 532.8 Q(.k)
-.65 E(ernel.or)-.1 E(g/doc/man\255pages/.)-.18 E 184.28
(Linux 2018-02-02)72 768 R(8)205.67 E 0 Cg EP
%%Trailer
end
%%EOF
